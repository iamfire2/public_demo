{"version":3,"sources":["history.js","components/GoogleAuth.js","actions/index.js","actions/types.js","components/Home.js","api/api.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["createBrowserHistory","GoogleAuth","onAuthChange","isSignedIn","props","signIn","auth","currentUser","get","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","this","onClick","className","style","renderAuthButton","React","Component","connect","state","userId","type","payload","Home","useState","username","setUsername","password","setPassword","Grid","container","direction","justify","alignItems","left","top","marginLeft","position","marginTop","Paper","elevation","padding","Typography","variant","onSubmit","e","preventDefault","axios","create","baseURL","post","catch","console","log","res","data","access_token","item","lg","TextField","required","id","label","defaultValue","onChange","target","value","autoComplete","Button","color","fullWidth","width","App","history","path","exact","component","INTIAL_STATE","combineReducers","action","form","formReducer","streams","_","omit","mapKeys","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.c85c89d5.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn, signOut } from \"../actions\";\r\n\r\nclass GoogleAuth extends React.Component {\r\n  componentDidMount() {\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"390486224557-853u366v4pao19i98ufoj6cj1mf8q07a.apps.googleusercontent.com\",\r\n          scope: \"email\",\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  onAuthChange = (isSignedIn) => {\r\n    if (isSignedIn) {\r\n      this.props.signIn(this.auth.currentUser.get().getId());\r\n    } else {\r\n      this.props.signOut();\r\n    }\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn();\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut();\r\n  };\r\n\r\n  renderAuthButton() {\r\n    if (this.props.isSignedIn === null) {\r\n      return null;\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <button\r\n          onClick={this.onSignOutClick}\r\n          className=\"ui red google button\"\r\n          style={this.props.style ? this.props.style : {}}\r\n        >\r\n          <i className=\"google icon\" />\r\n          Logout\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button\r\n          onClick={this.onSignInClick}\r\n          className=\"ui red google button\"\r\n          style={this.props.style ? this.props.style : {}}\r\n        >\r\n          <i className=\"google icon\" />\r\n          Login\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderAuthButton()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isSignedIn: state.auth.isSignedIn };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\r\n","// import streams from \"../api/streams\";\r\nimport history from \"../history\";\r\nimport {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  CREATE_STREAM,\r\n  FETCH_STREAM,\r\n  FETCH_STREAMS,\r\n  DELETE_STREAM,\r\n  EDIT_STREAM,\r\n} from \"./types\";\r\n\r\nexport const signIn = (userId) => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: userId,\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT,\r\n  };\r\n};\r\n\r\n// export const fetchStreams = () => async dispatch => {\r\n//   const response = await streams.get(\"/streams\");\r\n\r\n//   dispatch({ type: FETCH_STREAMS, payload: response.data });\r\n// };\r\n\r\n// export const fetchStream = id => async dispatch => {\r\n//   const response = await streams.get(`/streams/${id}`);\r\n\r\n//   dispatch({ type: FETCH_STREAM, payload: response.data });\r\n// };\r\n\r\n// export const createStream = formValues => {\r\n//   return async (dispatch, getState) => {\r\n//     const { userId } = getState().auth;\r\n//     const response = await streams.post(\"/streams\", { ...formValues, userId });\r\n\r\n//     dispatch({ type: CREATE_STREAM, payload: response.data });\r\n//     history.push(\"/\");\r\n//   };\r\n// };\r\n\r\n// export const editStream = (id, formValues) => async dispatch => {\r\n//   const response = await streams.patch(`/streams/${id}`, formValues);\r\n\r\n//   dispatch({ type: EDIT_STREAM, payload: response.data });\r\n//   history.push(\"/\");\r\n// };\r\n\r\n// export const deleteStream = id => async dispatch => {\r\n//   await streams.delete(`/streams/${id}`);\r\n\r\n//   dispatch({ type: DELETE_STREAM, payload: id });\r\n//   history.push(\"/\");\r\n// };\r\n","export const SIGN_IN = \"SIGN_IN\";\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\nexport const CREATE_STREAM = \"CREATE_STREAM\";\r\nexport const FETCH_STREAMS = \"FETCH_STREAMS\";\r\nexport const FETCH_STREAM = \"FETCH_STREAM\";\r\nexport const DELETE_STREAM = \"DELETE_STREAM\";\r\nexport const EDIT_STREAM = \"EDIT_STREAM\";\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid, TextField, Paper, Typography } from \"@material-ui/core\";\r\n\r\nimport GoogleAuth from \"./GoogleAuth\";\r\nimport { testUrl } from \"../api/api\";\r\n\r\nfunction Home() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    testUrl()\r\n      .post(\"/auth\", { username, password })\r\n      .catch((e) => console.log(e))\r\n      .then((res) => console.log(res.data.access_token));\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      style={{\r\n        left: \"25%\",\r\n        top: \"50%\",\r\n        marginLeft: \"-25%\",\r\n        position: \"absolute\",\r\n        marginTop: \"-25%\",\r\n      }}\r\n    >\r\n      <Paper elevation={3} style={{ padding: \"2rem\" }}>\r\n        <Typography variant=\"h6\">Sign in</Typography>\r\n        <form onSubmit={login}>\r\n          <Grid item lg={12}>\r\n            <TextField\r\n              required\r\n              id=\"standard-required\"\r\n              label=\"Username\"\r\n              defaultValue={username}\r\n              onChange={(e) => {\r\n                setUsername(e.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12}>\r\n            <TextField\r\n              id=\"standard-password-input\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              required\r\n              defaultValue={password}\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12} style={{ marginTop: \"2rem\" }}>\r\n            <Button variant=\"contained\" color=\"primary\" fullWidth type=\"submit\">\r\n              Login\r\n            </Button>\r\n          </Grid>\r\n        </form>\r\n        <GoogleAuth style={{ marginTop: \"1rem\", width: \"100%\" }} />\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\n\r\nexport const testUrl = () => {\r\n  return axios.create({\r\n    baseURL: \"http://localhost:5000\",\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport history from \"../history\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <Router history={history}>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { SIGN_IN, SIGN_OUT } from \"../actions/types\";\r\n\r\nconst INTIAL_STATE = {\r\n  isSignedIn: null,\r\n  userId: null\r\n};\r\n\r\nexport default (state = INTIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return { ...state, isSignedIn: true, userId: action.payload };\r\n    case SIGN_OUT:\r\n      return { ...state, isSignedIn: false, userId: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport authReducer from \"./authReducer\";\r\nimport streamReducer from \"./streamReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  streams: streamReducer\r\n});\r\n","import {\r\n  CREATE_STREAM,\r\n  FETCH_STREAM,\r\n  FETCH_STREAMS,\r\n  DELETE_STREAM,\r\n  EDIT_STREAM\r\n} from \"../actions/types\";\r\nimport _ from \"lodash\";\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_STREAM:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case CREATE_STREAM:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case EDIT_STREAM:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case DELETE_STREAM:\r\n      return _.omit(state, action.payload);\r\n    case FETCH_STREAMS:\r\n      return { ...state, ..._.mapKeys(action.payload, 'id') };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\nimport \"./index.css\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}